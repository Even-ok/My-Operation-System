     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_debug_print
     7 00000000                                 	EXTERN	_memman_alloc_4k
     8 00000000                                 	EXTERN	_tek_getsize
     9 00000000                                 	EXTERN	_tek_decomp
    10 00000000                                 	EXTERN	_memman_free_4k
    11 00000000                                 	EXTERN	_sprintf
    12 00000000                                 	EXTERN	_memman_alloc
    13 00000000                                 	EXTERN	_memman_free_fdata
    14 00000000                                 	EXTERN	_task_now
    15 00000000                                 	EXTERN	_strcat
    16 00000000                                 [FILE "file.c"]
    17                                          [SECTION .text]
    18 00000000                                 	GLOBAL	_file_readfat
    19 00000000                                 _file_readfat:
    20 00000000 55                              	PUSH	EBP
    21 00000001 31 C9                           	XOR	ECX,ECX
    22 00000003 89 E5                           	MOV	EBP,ESP
    23 00000005 57                              	PUSH	EDI
    24 00000006 56                              	PUSH	ESI
    25 00000007 53                              	PUSH	EBX
    26 00000008 8B 7D 08                        	MOV	EDI,DWORD [8+EBP]
    27 0000000B 8B 75 0C                        	MOV	ESI,DWORD [12+EBP]
    28 0000000E 31 DB                           	XOR	EBX,EBX
    29 00000010                                 L6:
    30 00000010 0F B6 44 31 01                  	MOVZX	EAX,BYTE [1+ECX+ESI*1]
    31 00000015 0F B6 14 31                     	MOVZX	EDX,BYTE [ECX+ESI*1]
    32 00000019 C1 E0 08                        	SAL	EAX,8
    33 0000001C 09 C2                           	OR	EDX,EAX
    34 0000001E 81 E2 00000FFF                  	AND	EDX,4095
    35 00000024 89 14 9F                        	MOV	DWORD [EDI+EBX*4],EDX
    36 00000027 8A 44 31 01                     	MOV	AL,BYTE [1+ECX+ESI*1]
    37 0000002B 0F B6 54 31 02                  	MOVZX	EDX,BYTE [2+ECX+ESI*1]
    38 00000030 C0 E8 04                        	SHR	AL,4
    39 00000033 83 C1 03                        	ADD	ECX,3
    40 00000036 C1 E2 04                        	SAL	EDX,4
    41 00000039 0F B6 C0                        	MOVZX	EAX,AL
    42 0000003C 09 D0                           	OR	EAX,EDX
    43 0000003E 89 44 9F 04                     	MOV	DWORD [4+EDI+EBX*4],EAX
    44 00000042 83 C3 02                        	ADD	EBX,2
    45 00000045 81 FB 00000B3F                  	CMP	EBX,2879
    46 0000004B 7E C3                           	JLE	L6
    47 0000004D 5B                              	POP	EBX
    48 0000004E 5E                              	POP	ESI
    49 0000004F 5F                              	POP	EDI
    50 00000050 5D                              	POP	EBP
    51 00000051 C3                              	RET
    52 00000052                                 	GLOBAL	_file_loadfile
    53 00000052                                 _file_loadfile:
    54 00000052 55                              	PUSH	EBP
    55 00000053 89 E5                           	MOV	EBP,ESP
    56 00000055 57                              	PUSH	EDI
    57 00000056 56                              	PUSH	ESI
    58 00000057 53                              	PUSH	EBX
    59 00000058 8B 4D 0C                        	MOV	ECX,DWORD [12+EBP]
    60 0000005B 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
    61 0000005E 8B 5D 10                        	MOV	EBX,DWORD [16+EBP]
    62 00000061                                 L10:
    63 00000061 81 F9 00000200                  	CMP	ECX,512
    64 00000067 7E 2F                           	JLE	L27
    65 00000069 31 D2                           	XOR	EDX,EDX
    66 0000006B                                 L23:
    67 0000006B 89 F0                           	MOV	EAX,ESI
    68 0000006D 8B 7D 18                        	MOV	EDI,DWORD [24+EBP]
    69 00000070 C1 E0 09                        	SAL	EAX,9
    70 00000073 01 D0                           	ADD	EAX,EDX
    71 00000075 8A 04 38                        	MOV	AL,BYTE [EAX+EDI*1]
    72 00000078 88 04 1A                        	MOV	BYTE [EDX+EBX*1],AL
    73 0000007B 42                              	INC	EDX
    74 0000007C 81 FA 000001FF                  	CMP	EDX,511
    75 00000082 7E E7                           	JLE	L23
    76 00000084 8B 45 14                        	MOV	EAX,DWORD [20+EBP]
    77 00000087 81 E9 00000200                  	SUB	ECX,512
    78 0000008D 81 C3 00000200                  	ADD	EBX,512
    79 00000093 8B 34 B0                        	MOV	ESI,DWORD [EAX+ESI*4]
    80 00000096 EB C9                           	JMP	L10
    81 00000098                                 L27:
    82 00000098 31 D2                           	XOR	EDX,EDX
    83 0000009A 39 CA                           	CMP	EDX,ECX
    84 0000009C 7D 15                           	JGE	L9
    85 0000009E                                 L18:
    86 0000009E 89 F0                           	MOV	EAX,ESI
    87 000000A0 8B 7D 18                        	MOV	EDI,DWORD [24+EBP]
    88 000000A3 C1 E0 09                        	SAL	EAX,9
    89 000000A6 01 D0                           	ADD	EAX,EDX
    90 000000A8 8A 04 38                        	MOV	AL,BYTE [EAX+EDI*1]
    91 000000AB 88 04 1A                        	MOV	BYTE [EDX+EBX*1],AL
    92 000000AE 42                              	INC	EDX
    93 000000AF 39 CA                           	CMP	EDX,ECX
    94 000000B1 7C EB                           	JL	L18
    95 000000B3                                 L9:
    96 000000B3 5B                              	POP	EBX
    97 000000B4 5E                              	POP	ESI
    98 000000B5 5F                              	POP	EDI
    99 000000B6 5D                              	POP	EBP
   100 000000B7 C3                              	RET
   101 000000B8                                 	GLOBAL	_file_search
   102 000000B8                                 _file_search:
   103 000000B8 55                              	PUSH	EBP
   104 000000B9 31 C9                           	XOR	ECX,ECX
   105 000000BB 89 E5                           	MOV	EBP,ESP
   106 000000BD 57                              	PUSH	EDI
   107 000000BE 56                              	PUSH	ESI
   108 000000BF 53                              	PUSH	EBX
   109 000000C0 83 EC 14                        	SUB	ESP,20
   110 000000C3 8B 5D 08                        	MOV	EBX,DWORD [8+EBP]
   111 000000C6                                 L33:
   112 000000C6 C6 44 0D E4 20                  	MOV	BYTE [-28+EBP+ECX*1],32
   113 000000CB 41                              	INC	ECX
   114 000000CC 83 F9 0A                        	CMP	ECX,10
   115 000000CF 7E F5                           	JLE	L33
   116 000000D1 31 C9                           	XOR	ECX,ECX
   117 000000D3 31 FF                           	XOR	EDI,EDI
   118 000000D5 80 3B 00                        	CMP	BYTE [EBX],0
   119 000000D8 74 29                           	JE	L60
   120 000000DA                                 L42:
   121 000000DA 31 C0                           	XOR	EAX,EAX
   122 000000DC 83 F9 0A                        	CMP	ECX,10
   123 000000DF 7F 5D                           	JG	L28
   124 000000E1 8A 14 1F                        	MOV	DL,BYTE [EDI+EBX*1]
   125 000000E4 80 FA 2E                        	CMP	DL,46
   126 000000E7 74 6E                           	JE	L64
   127 000000E9                                 L39:
   128 000000E9 8D 42 9F                        	LEA	EAX,DWORD [-97+EDX]
   129 000000EC 88 54 0D E4                     	MOV	BYTE [-28+EBP+ECX*1],DL
   130 000000F0 3C 19                           	CMP	AL,25
   131 000000F2 77 07                           	JA	L41
   132 000000F4 8D 42 E0                        	LEA	EAX,DWORD [-32+EDX]
   133 000000F7 88 44 0D E4                     	MOV	BYTE [-28+EBP+ECX*1],AL
   134 000000FB                                 L41:
   135 000000FB 41                              	INC	ECX
   136 000000FC                                 L36:
   137 000000FC 47                              	INC	EDI
   138 000000FD 80 3C 1F 00                     	CMP	BYTE [EDI+EBX*1],0
   139 00000101 75 D7                           	JNE	L42
   140 00000103                                 L60:
   141 00000103 31 FF                           	XOR	EDI,EDI
   142 00000105 3B 7D 10                        	CMP	EDI,DWORD [16+EBP]
   143 00000108 7D 49                           	JGE	L44
   144 0000010A 8B 75 0C                        	MOV	ESI,DWORD [12+EBP]
   145 0000010D C7 45 E0 00000000               	MOV	DWORD [-32+EBP],0
   146 00000114                                 L56:
   147 00000114 8B 45 0C                        	MOV	EAX,DWORD [12+EBP]
   148 00000117 80 38 00                        	CMP	BYTE [EAX],0
   149 0000011A 74 37                           	JE	L44
   150 0000011C F6 46 0B 18                     	TEST	BYTE [11+ESI],24
   151 00000120 75 24                           	JNE	L54
   152 00000122 89 C3                           	MOV	EBX,EAX
   153 00000124 31 C9                           	XOR	ECX,ECX
   154 00000126 03 5D E0                        	ADD	EBX,DWORD [-32+EBP]
   155 00000129                                 L55:
   156 00000129 0F B6 13                        	MOVZX	EDX,BYTE [EBX]
   157 0000012C 0F BE 44 0D E4                  	MOVSX	EAX,BYTE [-28+EBP+ECX*1]
   158 00000131 39 C2                           	CMP	EDX,EAX
   159 00000133 75 11                           	JNE	L54
   160 00000135 41                              	INC	ECX
   161 00000136 43                              	INC	EBX
   162 00000137 89 F0                           	MOV	EAX,ESI
   163 00000139 83 F9 0A                        	CMP	ECX,10
   164 0000013C 7E EB                           	JLE	L55
   165 0000013E                                 L28:
   166 0000013E 83 C4 14                        	ADD	ESP,20
   167 00000141 5B                              	POP	EBX
   168 00000142 5E                              	POP	ESI
   169 00000143 5F                              	POP	EDI
   170 00000144 5D                              	POP	EBP
   171 00000145 C3                              	RET
   172 00000146                                 L54:
   173 00000146 47                              	INC	EDI
   174 00000147 83 C6 20                        	ADD	ESI,32
   175 0000014A 83 45 E0 20                     	ADD	DWORD [-32+EBP],32
   176 0000014E 3B 7D 10                        	CMP	EDI,DWORD [16+EBP]
   177 00000151 7C C1                           	JL	L56
   178 00000153                                 L44:
   179 00000153 31 C0                           	XOR	EAX,EAX
   180 00000155 EB E7                           	JMP	L28
   181 00000157                                 L64:
   182 00000157 83 F9 08                        	CMP	ECX,8
   183 0000015A 7F 8D                           	JG	L39
   184 0000015C B9 00000008                     	MOV	ECX,8
   185 00000161 EB 99                           	JMP	L36
   186                                          [SECTION .data]
   187 00000000                                 LC1:
   188 00000000 66 69 6C 65 2F 64 69 72 65 63   	DB	"file/directory was not found in myfinfo_search()",0x0A,0x00
       0000000A 74 6F 72 79 20 77 61 73 20 6E 
       00000014 6F 74 20 66 6F 75 6E 64 20 69 
       0000001E 6E 20 6D 79 66 69 6E 66 6F 5F 
       00000028 73 65 61 72 63 68 28 29 0A 00 
   189 00000032                                 LC0:
   190 00000032 66 69 6C 65 20 77 61 73 20 6E   	DB	"file was not found in myfinfo_search(): int j is too high.",0x0A,0x00
       0000003C 6F 74 20 66 6F 75 6E 64 20 69 
       00000046 6E 20 6D 79 66 69 6E 66 6F 5F 
       00000050 73 65 61 72 63 68 28 29 3A 20 
       0000005A 69 6E 74 20 6A 20 69 73 20 74 
       00000064 6F 6F 20 68 69 67 68 2E 0A 00 
   191                                          [SECTION .text]
   192 00000163                                 	GLOBAL	_myfinfo_search
   193 00000163                                 _myfinfo_search:
   194 00000163 55                              	PUSH	EBP
   195 00000164 31 C9                           	XOR	ECX,ECX
   196 00000166 89 E5                           	MOV	EBP,ESP
   197 00000168 57                              	PUSH	EDI
   198 00000169 56                              	PUSH	ESI
   199 0000016A 53                              	PUSH	EBX
   200 0000016B 83 EC 1C                        	SUB	ESP,28
   201 0000016E 8B 5D 08                        	MOV	EBX,DWORD [8+EBP]
   202 00000171                                 L70:
   203 00000171 C6 44 0D E4 20                  	MOV	BYTE [-28+EBP+ECX*1],32
   204 00000176 41                              	INC	ECX
   205 00000177 83 F9 0A                        	CMP	ECX,10
   206 0000017A 7E F5                           	JLE	L70
   207 0000017C 31 C9                           	XOR	ECX,ECX
   208 0000017E 31 FF                           	XOR	EDI,EDI
   209 00000180 80 3B 00                        	CMP	BYTE [EBX],0
   210 00000183 74 2F                           	JE	L105
   211 00000185                                 L79:
   212 00000185 83 F9 0A                        	CMP	ECX,10
   213 00000188 0F 8F 000000CA                  	JG	L112
   214 0000018E 8A 14 1F                        	MOV	DL,BYTE [EDI+EBX*1]
   215 00000191 80 FA 2E                        	CMP	DL,46
   216 00000194 0F 84 000000AB                  	JE	L113
   217 0000019A                                 L76:
   218 0000019A 8D 42 9F                        	LEA	EAX,DWORD [-97+EDX]
   219 0000019D 88 54 0D E4                     	MOV	BYTE [-28+EBP+ECX*1],DL
   220 000001A1 3C 19                           	CMP	AL,25
   221 000001A3 77 07                           	JA	L78
   222 000001A5 8D 42 E0                        	LEA	EAX,DWORD [-32+EDX]
   223 000001A8 88 44 0D E4                     	MOV	BYTE [-28+EBP+ECX*1],AL
   224 000001AC                                 L78:
   225 000001AC 41                              	INC	ECX
   226 000001AD                                 L73:
   227 000001AD 47                              	INC	EDI
   228 000001AE 80 3C 1F 00                     	CMP	BYTE [EDI+EBX*1],0
   229 000001B2 75 D1                           	JNE	L79
   230 000001B4                                 L105:
   231 000001B4 31 FF                           	XOR	EDI,EDI
   232 000001B6 3B 7D 10                        	CMP	EDI,DWORD [16+EBP]
   233 000001B9 7D 42                           	JGE	L81
   234 000001BB 8B 5D 0C                        	MOV	EBX,DWORD [12+EBP]
   235 000001BE 89 5D E0                        	MOV	DWORD [-32+EBP],EBX
   236 000001C1 89 DE                           	MOV	ESI,EBX
   237 000001C3 89 5D DC                        	MOV	DWORD [-36+EBP],EBX
   238 000001C6 C7 45 D8 00000000               	MOV	DWORD [-40+EBP],0
   239 000001CD                                 L101:
   240 000001CD 8B 45 D8                        	MOV	EAX,DWORD [-40+EBP]
   241 000001D0 8B 55 0C                        	MOV	EDX,DWORD [12+EBP]
   242 000001D3 80 3C 02 00                     	CMP	BYTE [EDX+EAX*1],0
   243 000001D7 74 24                           	JE	L81
   244 000001D9 8A 44 02 0B                     	MOV	AL,BYTE [11+EDX+EAX*1]
   245 000001DD 3C 20                           	CMP	AL,32
   246 000001DF 74 4A                           	JE	L114
   247 000001E1 3C 10                           	CMP	AL,16
   248 000001E3 74 2C                           	JE	L115
   249 000001E5                                 L91:
   250 000001E5 47                              	INC	EDI
   251 000001E6 83 C3 28                        	ADD	EBX,40
   252 000001E9 83 45 E0 28                     	ADD	DWORD [-32+EBP],40
   253 000001ED 83 45 DC 28                     	ADD	DWORD [-36+EBP],40
   254 000001F1 83 C6 28                        	ADD	ESI,40
   255 000001F4 83 45 D8 28                     	ADD	DWORD [-40+EBP],40
   256 000001F8 3B 7D 10                        	CMP	EDI,DWORD [16+EBP]
   257 000001FB 7C D0                           	JL	L101
   258 000001FD                                 L81:
   259 000001FD 68 [00000000]                   	PUSH	LC1
   260 00000202                                 L111:
   261 00000202 E8 [00000000]                   	CALL	_debug_print
   262 00000207 31 C0                           	XOR	EAX,EAX
   263 00000209                                 L65:
   264 00000209 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   265 0000020C 5B                              	POP	EBX
   266 0000020D 5E                              	POP	ESI
   267 0000020E 5F                              	POP	EDI
   268 0000020F 5D                              	POP	EBP
   269 00000210 C3                              	RET
   270 00000211                                 L115:
   271 00000211 31 C9                           	XOR	ECX,ECX
   272 00000213                                 L100:
   273 00000213 0F B6 14 19                     	MOVZX	EDX,BYTE [ECX+EBX*1]
   274 00000217 0F BE 44 0D E4                  	MOVSX	EAX,BYTE [-28+EBP+ECX*1]
   275 0000021C 39 C2                           	CMP	EDX,EAX
   276 0000021E 75 C5                           	JNE	L91
   277 00000220 41                              	INC	ECX
   278 00000221 8B 45 E0                        	MOV	EAX,DWORD [-32+EBP]
   279 00000224 83 F9 07                        	CMP	ECX,7
   280 00000227 7F E0                           	JG	L65
   281 00000229 EB E8                           	JMP	L100
   282 0000022B                                 L114:
   283 0000022B 31 C9                           	XOR	ECX,ECX
   284 0000022D                                 L92:
   285 0000022D 0F B6 14 31                     	MOVZX	EDX,BYTE [ECX+ESI*1]
   286 00000231 0F BE 44 0D E4                  	MOVSX	EAX,BYTE [-28+EBP+ECX*1]
   287 00000236 39 C2                           	CMP	EDX,EAX
   288 00000238 75 AB                           	JNE	L91
   289 0000023A 41                              	INC	ECX
   290 0000023B 8B 45 DC                        	MOV	EAX,DWORD [-36+EBP]
   291 0000023E 83 F9 0A                        	CMP	ECX,10
   292 00000241 7F C6                           	JG	L65
   293 00000243 EB E8                           	JMP	L92
   294 00000245                                 L113:
   295 00000245 83 F9 08                        	CMP	ECX,8
   296 00000248 0F 8F FFFFFF4C                  	JG	L76
   297 0000024E B9 00000008                     	MOV	ECX,8
   298 00000253 E9 FFFFFF55                     	JMP	L73
   299 00000258                                 L112:
   300 00000258 68 [00000032]                   	PUSH	LC0
   301 0000025D EB A3                           	JMP	L111
   302 0000025F                                 	GLOBAL	_file_loadfile2
   303 0000025F                                 _file_loadfile2:
   304 0000025F 55                              	PUSH	EBP
   305 00000260 89 E5                           	MOV	EBP,ESP
   306 00000262 57                              	PUSH	EDI
   307 00000263 56                              	PUSH	ESI
   308 00000264 53                              	PUSH	EBX
   309 00000265 52                              	PUSH	EDX
   310 00000266 8B 45 0C                        	MOV	EAX,DWORD [12+EBP]
   311 00000269 8B 00                           	MOV	EAX,DWORD [EAX]
   312 0000026B 50                              	PUSH	EAX
   313 0000026C 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
   314 0000026F 68 003C0000                     	PUSH	3932160
   315 00000274 E8 [00000000]                   	CALL	_memman_alloc_4k
   316 00000279 68 00103E00                     	PUSH	1064448
   317 0000027E FF 75 10                        	PUSH	DWORD [16+EBP]
   318 00000281 50                              	PUSH	EAX
   319 00000282 89 C7                           	MOV	EDI,EAX
   320 00000284 FF 75 F0                        	PUSH	DWORD [-16+EBP]
   321 00000287 FF 75 08                        	PUSH	DWORD [8+EBP]
   322 0000028A E8 FFFFFDC3                     	CALL	_file_loadfile
   323 0000028F 83 C4 1C                        	ADD	ESP,28
   324 00000292 83 7D F0 10                     	CMP	DWORD [-16+EBP],16
   325 00000296 7F 0A                           	JG	L119
   326 00000298                                 L117:
   327 00000298 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   328 0000029B 89 F8                           	MOV	EAX,EDI
   329 0000029D 5B                              	POP	EBX
   330 0000029E 5E                              	POP	ESI
   331 0000029F 5F                              	POP	EDI
   332 000002A0 5D                              	POP	EBP
   333 000002A1 C3                              	RET
   334 000002A2                                 L119:
   335 000002A2 57                              	PUSH	EDI
   336 000002A3 E8 [00000000]                   	CALL	_tek_getsize
   337 000002A8 89 C6                           	MOV	ESI,EAX
   338 000002AA 58                              	POP	EAX
   339 000002AB 85 F6                           	TEST	ESI,ESI
   340 000002AD 7E E9                           	JLE	L117
   341 000002AF 56                              	PUSH	ESI
   342 000002B0 68 003C0000                     	PUSH	3932160
   343 000002B5 E8 [00000000]                   	CALL	_memman_alloc_4k
   344 000002BA 56                              	PUSH	ESI
   345 000002BB 89 C3                           	MOV	EBX,EAX
   346 000002BD 50                              	PUSH	EAX
   347 000002BE 57                              	PUSH	EDI
   348 000002BF E8 [00000000]                   	CALL	_tek_decomp
   349 000002C4 FF 75 F0                        	PUSH	DWORD [-16+EBP]
   350 000002C7 57                              	PUSH	EDI
   351 000002C8 89 DF                           	MOV	EDI,EBX
   352 000002CA 68 003C0000                     	PUSH	3932160
   353 000002CF E8 [00000000]                   	CALL	_memman_free_4k
   354 000002D4 83 C4 20                        	ADD	ESP,32
   355 000002D7 8B 45 0C                        	MOV	EAX,DWORD [12+EBP]
   356 000002DA 89 30                           	MOV	DWORD [EAX],ESI
   357 000002DC EB BA                           	JMP	L117
   358                                          [SECTION .data]
   359 0000006E                                 LC2:
   360 0000006E 2F 2A 2A 2A 20 49 4E 20 46 55   	DB	"/*** IN FUNCTION get_newdinfo() ***/",0x0A,0x00
       00000078 4E 43 54 49 4F 4E 20 67 65 74 
       00000082 5F 6E 65 77 64 69 6E 66 6F 28 
       0000008C 29 20 2A 2A 2A 2F 0A 00 
   361 00000094                                 LC4:
   362 00000094 64 69 6E 66 6F 5B 25 64 5D 2D   	DB	"dinfo[%d]->this_addr = 0x%08x",0x0A,0x00
       0000009E 3E 74 68 69 73 5F 61 64 64 72 
       000000A8 20 3D 20 30 78 25 30 38 78 0A 
       000000B2 00 
   363 000000B3                                 LC5:
   364 000000B3 6D 61 78 20 61 76 61 69 6C 61   	DB	"max available dir number is %d",0x0A,0x00
       000000BD 62 6C 65 20 64 69 72 20 6E 75 
       000000C7 6D 62 65 72 20 69 73 20 25 64 
       000000D1 0A 00 
   365 000000D3                                 LC6:
   366 000000D3 2F 2A 2A 2A 2A 2A 2A 2A 2A 2A   	DB	"/*********************************/",0x0A,0x00
       000000DD 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 
       000000E7 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 
       000000F1 2A 2A 2A 2A 2F 0A 00 
   367 000000F8                                 LC7:
   368 000000F8 00                              	DB	0x00
   369 000000F9                                 LC3:
   370 000000F9 64 69 6E 66 6F 5B 25 64 5D 20   	DB	"dinfo[%d] addr = 0x%08x",0x0A,0x00
       00000103 61 64 64 72 20 3D 20 30 78 25 
       0000010D 30 38 78 0A 00 
   371                                          [SECTION .text]
   372 000002DE                                 	GLOBAL	_get_newdinfo
   373 000002DE                                 _get_newdinfo:
   374 000002DE 55                              	PUSH	EBP
   375 000002DF 89 E5                           	MOV	EBP,ESP
   376 000002E1 57                              	PUSH	EDI
   377 000002E2 56                              	PUSH	ESI
   378 000002E3 31 FF                           	XOR	EDI,EDI
   379 000002E5 53                              	PUSH	EBX
   380 000002E6 BE 00400000                     	MOV	ESI,4194304
   381 000002EB 83 EC 44                        	SUB	ESP,68
   382 000002EE 8D 5D B4                        	LEA	EBX,DWORD [-76+EBP]
   383 000002F1 C7 45 B0 FFFFFFFF               	MOV	DWORD [-80+EBP],-1
   384 000002F8 68 [0000006E]                   	PUSH	LC2
   385 000002FD 53                              	PUSH	EBX
   386 000002FE E8 [00000000]                   	CALL	_sprintf
   387 00000303 53                              	PUSH	EBX
   388 00000304 E8 [00000000]                   	CALL	_debug_print
   389 00000309 83 C4 0C                        	ADD	ESP,12
   390 0000030C 83 3D 004007DC 00               	CMP	DWORD [4196316],0
   391 00000313 0F 85 00000080                  	JNE	L125
   392 00000319                                 L127:
   393 00000319 FF B6 000007DC                  	PUSH	DWORD [2012+ESI]
   394 0000031F 57                              	PUSH	EDI
   395 00000320 8D 5D B4                        	LEA	EBX,DWORD [-76+EBP]
   396 00000323 68 [00000094]                   	PUSH	LC4
   397 00000328 53                              	PUSH	EBX
   398 00000329 E8 [00000000]                   	CALL	_sprintf
   399 0000032E 53                              	PUSH	EBX
   400 0000032F E8 [00000000]                   	CALL	_debug_print
   401 00000334 FF 75 B0                        	PUSH	DWORD [-80+EBP]
   402 00000337 68 [000000B3]                   	PUSH	LC5
   403 0000033C 53                              	PUSH	EBX
   404 0000033D E8 [00000000]                   	CALL	_sprintf
   405 00000342 83 C4 20                        	ADD	ESP,32
   406 00000345 53                              	PUSH	EBX
   407 00000346 E8 [00000000]                   	CALL	_debug_print
   408 0000034B 68 [000000D3]                   	PUSH	LC6
   409 00000350 53                              	PUSH	EBX
   410 00000351 E8 [00000000]                   	CALL	_sprintf
   411 00000356 53                              	PUSH	EBX
   412 00000357 E8 [00000000]                   	CALL	_debug_print
   413 0000035C 68 [000000F8]                   	PUSH	LC7
   414 00000361 8B 45 B0                        	MOV	EAX,DWORD [-80+EBP]
   415 00000364 69 C0 000007E0                  	IMUL	EAX,EAX,2016
   416 0000036A 8D 98 004007E0                  	LEA	EBX,DWORD [4196320+EAX]
   417 00000370 05 00400FB0                     	ADD	EAX,4198320
   418 00000375 50                              	PUSH	EAX
   419 00000376 E8 [00000000]                   	CALL	_sprintf
   420 0000037B 89 D8                           	MOV	EAX,EBX
   421 0000037D C7 83 000007D8 00000000         	MOV	DWORD [2008+EBX],0
   422 00000387 C7 83 000007DC 00000000         	MOV	DWORD [2012+EBX],0
   423 00000391 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   424 00000394 5B                              	POP	EBX
   425 00000395 5E                              	POP	ESI
   426 00000396 5F                              	POP	EDI
   427 00000397 5D                              	POP	EBP
   428 00000398 C3                              	RET
   429 00000399                                 L125:
   430 00000399 FF B6 000007DC                  	PUSH	DWORD [2012+ESI]
   431 0000039F 57                              	PUSH	EDI
   432 000003A0 8D 5D B4                        	LEA	EBX,DWORD [-76+EBP]
   433 000003A3 68 [000000F9]                   	PUSH	LC3
   434 000003A8 81 C6 000007E0                  	ADD	ESI,2016
   435 000003AE 53                              	PUSH	EBX
   436 000003AF FF 45 B0                        	INC	DWORD [-80+EBP]
   437 000003B2 47                              	INC	EDI
   438 000003B3 E8 [00000000]                   	CALL	_sprintf
   439 000003B8 53                              	PUSH	EBX
   440 000003B9 E8 [00000000]                   	CALL	_debug_print
   441 000003BE 83 C4 14                        	ADD	ESP,20
   442 000003C1 83 BE 000007DC 00               	CMP	DWORD [2012+ESI],0
   443 000003C8 75 CF                           	JNE	L125
   444 000003CA E9 FFFFFF4A                     	JMP	L127
   445                                          [SECTION .data]
   446 00000112                                 LC8:
   447 00000112 49 6E 20 66 75 6E 63 74 69 6F   	DB	"In function myfopen(): file was not found.",0x0A,0x00
       0000011C 6E 20 6D 79 66 6F 70 65 6E 28 
       00000126 29 3A 20 66 69 6C 65 20 77 61 
       00000130 73 20 6E 6F 74 20 66 6F 75 6E 
       0000013A 64 2E 0A 00 
   448 0000013E                                 LC9:
   449 0000013E 66 64 61 74 61 20 3D 20 30 78   	DB	"fdata = 0x%08x",0x0A,"[debug] head.this_fdata = 0x%08x",0x0A,"[debug] head.this_dir = 0x%08x",0x0A,"[debug] head.stat = 0x%02x",0x0A,0x00
       00000148 25 30 38 78 0A 5B 64 65 62 75 
       00000152 67 5D 20 68 65 61 64 2E 74 68 
       0000015C 69 73 5F 66 64 61 74 61 20 3D 
       00000166 20 30 78 25 30 38 78 0A 5B 64 
       00000170 65 62 75 67 5D 20 68 65 61 64 
       0000017A 2E 74 68 69 73 5F 64 69 72 20 
       00000184 3D 20 30 78 25 30 38 78 0A 5B 
       0000018E 64 65 62 75 67 5D 20 68 65 61 
       00000198 64 2E 73 74 61 74 20 3D 20 30 
       000001A2 78 25 30 32 78 0A 00 
   450 000001A9                                 LC10:
   451 000001A9 62 6F 64 79 20 3D 20 25 73 5B   	DB	"body = %s[EOF]",0x0A,0x00
       000001B3 45 4F 46 5D 0A 00 
   452 000001B9                                 LC11:
   453 000001B9 61 6C 6C 6F 63 5F 73 69 7A 65   	DB	"alloc_size = 0x%08x",0x0A,0x00
       000001C3 20 3D 20 30 78 25 30 38 78 0A 
       000001CD 00 
   454 000001CE                                 LC12:
   455 000001CE 49 4E 49 54 20 74 65 6D 70 5F   	DB	"INIT temp_addr = 0x%08x",0x0A,0x00
       000001D8 61 64 64 72 20 3D 20 30 78 25 
       000001E2 30 38 78 0A 00 
   456 000001E7                                 LC13:
   457 000001E7 69 6E 69 74 69 61 6C 69 7A 69   	DB	"initializing memory domain was finished.",0x0A,0x00
       000001F1 6E 67 20 6D 65 6D 6F 72 79 20 
       000001FB 64 6F 6D 61 69 6E 20 77 61 73 
       00000205 20 66 69 6E 69 73 68 65 64 2E 
       0000020F 0A 00 
   458 00000211                                 LC14:
   459 00000211 6F 70 65 6E 65 64 20 66 64 61   	DB	"opened fdata addr = 0x%08x",0x0A,0x00
       0000021B 74 61 20 61 64 64 72 20 3D 20 
       00000225 30 78 25 30 38 78 0A 00 
   460 0000022D                                 LC15:
   461 0000022D 61 6C 6C 6F 63 61 74 65 64 20   	DB	"allocated fdata addr = 0x%08x",0x0A,0x00
       00000237 66 64 61 74 61 20 61 64 64 72 
       00000241 20 3D 20 30 78 25 30 38 78 0A 
       0000024B 00 
   462                                          [SECTION .text]
   463 000003CF                                 	GLOBAL	_myfopen
   464 000003CF                                 _myfopen:
   465 000003CF 55                              	PUSH	EBP
   466 000003D0 89 E5                           	MOV	EBP,ESP
   467 000003D2 57                              	PUSH	EDI
   468 000003D3 56                              	PUSH	ESI
   469 000003D4 53                              	PUSH	EBX
   470 000003D5 81 EC 00000474                  	SUB	ESP,1140
   471 000003DB 68 000000E0                     	PUSH	224
   472 000003E0 FF 75 0C                        	PUSH	DWORD [12+EBP]
   473 000003E3 FF 75 08                        	PUSH	DWORD [8+EBP]
   474 000003E6 E8 FFFFFD78                     	CALL	_myfinfo_search
   475 000003EB 83 C4 0C                        	ADD	ESP,12
   476 000003EE 85 C0                           	TEST	EAX,EAX
   477 000003F0 89 85 FFFFFB80                  	MOV	DWORD [-1152+EBP],EAX
   478 000003F6 74 0A                           	JE	L130
   479 000003F8 8A 40 0B                        	MOV	AL,BYTE [11+EAX]
   480 000003FB 83 E0 10                        	AND	EAX,16
   481 000003FE 84 C0                           	TEST	AL,AL
   482 00000400 74 14                           	JE	L129
   483 00000402                                 L130:
   484 00000402 68 [00000112]                   	PUSH	LC8
   485 00000407 E8 [00000000]                   	CALL	_debug_print
   486 0000040C 31 C0                           	XOR	EAX,EAX
   487 0000040E                                 L128:
   488 0000040E 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   489 00000411 5B                              	POP	EBX
   490 00000412 5E                              	POP	ESI
   491 00000413 5F                              	POP	EDI
   492 00000414 5D                              	POP	EBP
   493 00000415 C3                              	RET
   494 00000416                                 L129:
   495 00000416 8B 85 FFFFFB80                  	MOV	EAX,DWORD [-1152+EBP]
   496 0000041C 6A 08                           	PUSH	8
   497 0000041E FF 70 24                        	PUSH	DWORD [36+EAX]
   498 00000421 E8 00000630                     	CALL	_add_status_myfdata
   499 00000426 8B 95 FFFFFB80                  	MOV	EDX,DWORD [-1152+EBP]
   500 0000042C 8B 42 24                        	MOV	EAX,DWORD [36+EDX]
   501 0000042F 0F B6 00                        	MOVZX	EAX,BYTE [EAX]
   502 00000432 50                              	PUSH	EAX
   503 00000433 8B 42 24                        	MOV	EAX,DWORD [36+EDX]
   504 00000436 FF 70 14                        	PUSH	DWORD [20+EAX]
   505 00000439 8B 42 24                        	MOV	EAX,DWORD [36+EDX]
   506 0000043C FF 70 10                        	PUSH	DWORD [16+EAX]
   507 0000043F FF 72 24                        	PUSH	DWORD [36+EDX]
   508 00000442 68 [0000013E]                   	PUSH	LC9
   509 00000447 8D 85 FFFFFB84                  	LEA	EAX,DWORD [-1148+EBP]
   510 0000044D 50                              	PUSH	EAX
   511 0000044E E8 [00000000]                   	CALL	_sprintf
   512 00000453 8D 95 FFFFFB84                  	LEA	EDX,DWORD [-1148+EBP]
   513 00000459 83 C4 20                        	ADD	ESP,32
   514 0000045C 52                              	PUSH	EDX
   515 0000045D E8 [00000000]                   	CALL	_debug_print
   516 00000462 8B 95 FFFFFB80                  	MOV	EDX,DWORD [-1152+EBP]
   517 00000468 8B 42 24                        	MOV	EAX,DWORD [36+EDX]
   518 0000046B 83 C0 1C                        	ADD	EAX,28
   519 0000046E 50                              	PUSH	EAX
   520 0000046F 8D 85 FFFFFB84                  	LEA	EAX,DWORD [-1148+EBP]
   521 00000475 68 [000001A9]                   	PUSH	LC10
   522 0000047A 50                              	PUSH	EAX
   523 0000047B E8 [00000000]                   	CALL	_sprintf
   524 00000480 8D 95 FFFFFB84                  	LEA	EDX,DWORD [-1148+EBP]
   525 00000486 52                              	PUSH	EDX
   526 00000487 E8 [00000000]                   	CALL	_debug_print
   527 0000048C 8B 85 FFFFFB80                  	MOV	EAX,DWORD [-1152+EBP]
   528 00000492 FF 70 24                        	PUSH	DWORD [36+EAX]
   529 00000495 E8 00000580                     	CALL	_get_blocknum_myfdata
   530 0000049A 8D 95 FFFFFB84                  	LEA	EDX,DWORD [-1148+EBP]
   531 000004A0 89 C3                           	MOV	EBX,EAX
   532 000004A2 C1 E3 0A                        	SAL	EBX,10
   533 000004A5 53                              	PUSH	EBX
   534 000004A6 68 [000001B9]                   	PUSH	LC11
   535 000004AB 52                              	PUSH	EDX
   536 000004AC E8 [00000000]                   	CALL	_sprintf
   537 000004B1 8D 85 FFFFFB84                  	LEA	EAX,DWORD [-1148+EBP]
   538 000004B7 83 C4 24                        	ADD	ESP,36
   539 000004BA 50                              	PUSH	EAX
   540 000004BB E8 [00000000]                   	CALL	_debug_print
   541 000004C0 53                              	PUSH	EBX
   542 000004C1 68 003C0000                     	PUSH	3932160
   543 000004C6 E8 [00000000]                   	CALL	_memman_alloc
   544 000004CB 8D 95 FFFFFB84                  	LEA	EDX,DWORD [-1148+EBP]
   545 000004D1 89 C6                           	MOV	ESI,EAX
   546 000004D3 89 C7                           	MOV	EDI,EAX
   547 000004D5 50                              	PUSH	EAX
   548 000004D6 68 [000001CE]                   	PUSH	LC12
   549 000004DB 52                              	PUSH	EDX
   550 000004DC E8 [00000000]                   	CALL	_sprintf
   551 000004E1 83 C4 18                        	ADD	ESP,24
   552 000004E4 85 DB                           	TEST	EBX,EBX
   553 000004E6 7E 0E                           	JLE	L139
   554 000004E8 89 D8                           	MOV	EAX,EBX
   555 000004EA                                 L137:
   556 000004EA C7 07 00000000                  	MOV	DWORD [EDI],0
   557 000004F0 83 C7 04                        	ADD	EDI,4
   558 000004F3 48                              	DEC	EAX
   559 000004F4 75 F4                           	JNE	L137
   560 000004F6                                 L139:
   561 000004F6 68 [000001E7]                   	PUSH	LC13
   562 000004FB 8D BD FFFFFB84                  	LEA	EDI,DWORD [-1148+EBP]
   563 00000501 E8 [00000000]                   	CALL	_debug_print
   564 00000506 56                              	PUSH	ESI
   565 00000507 68 [00000211]                   	PUSH	LC14
   566 0000050C 57                              	PUSH	EDI
   567 0000050D E8 [00000000]                   	CALL	_sprintf
   568 00000512 57                              	PUSH	EDI
   569 00000513 E8 [00000000]                   	CALL	_debug_print
   570 00000518 8B 85 FFFFFB80                  	MOV	EAX,DWORD [-1152+EBP]
   571 0000051E FF 70 24                        	PUSH	DWORD [36+EAX]
   572 00000521 56                              	PUSH	ESI
   573 00000522 E8 000003D6                     	CALL	_myfcopy
   574 00000527 6A 04                           	PUSH	4
   575 00000529 56                              	PUSH	ESI
   576 0000052A E8 00000527                     	CALL	_add_status_myfdata
   577 0000052F 83 C4 24                        	ADD	ESP,36
   578 00000532 56                              	PUSH	ESI
   579 00000533 68 [0000022D]                   	PUSH	LC15
   580 00000538 57                              	PUSH	EDI
   581 00000539 E8 [00000000]                   	CALL	_sprintf
   582 0000053E 57                              	PUSH	EDI
   583 0000053F E8 [00000000]                   	CALL	_debug_print
   584 00000544 89 F0                           	MOV	EAX,ESI
   585 00000546 E9 FFFFFEC3                     	JMP	L128
   586                                          [SECTION .data]
   587 0000024C                                 LC16:
   588 0000024C 49 6E 20 66 75 6E 63 74 69 6F   	DB	"In function myfclose(): this file data is already closed.",0x0A,0x00
       00000256 6E 20 6D 79 66 63 6C 6F 73 65 
       00000260 28 29 3A 20 74 68 69 73 20 66 
       0000026A 69 6C 65 20 64 61 74 61 20 69 
       00000274 73 20 61 6C 72 65 61 64 79 20 
       0000027E 63 6C 6F 73 65 64 2E 0A 00 
   589                                          [SECTION .text]
   590 0000054B                                 	GLOBAL	_myfclose
   591 0000054B                                 _myfclose:
   592 0000054B 55                              	PUSH	EBP
   593 0000054C 89 E5                           	MOV	EBP,ESP
   594 0000054E 53                              	PUSH	EBX
   595 0000054F 8B 5D 08                        	MOV	EBX,DWORD [8+EBP]
   596 00000552 8B 4B 10                        	MOV	ECX,DWORD [16+EBX]
   597 00000555 8A 11                           	MOV	DL,BYTE [ECX]
   598 00000557 88 D0                           	MOV	AL,DL
   599 00000559 83 E0 08                        	AND	EAX,8
   600 0000055C 84 C0                           	TEST	AL,AL
   601 0000055E 75 12                           	JNE	L141
   602 00000560 68 [0000024C]                   	PUSH	LC16
   603 00000565 E8 [00000000]                   	CALL	_debug_print
   604 0000056A 83 C8 FF                        	OR	EAX,-1
   605 0000056D                                 L140:
   606 0000056D 8B 5D FC                        	MOV	EBX,DWORD [-4+EBP]
   607 00000570 C9                              	LEAVE
   608 00000571 C3                              	RET
   609 00000572                                 L141:
   610 00000572 83 E2 F7                        	AND	EDX,-9
   611 00000575 88 11                           	MOV	BYTE [ECX],DL
   612 00000577 53                              	PUSH	EBX
   613 00000578 68 003C0000                     	PUSH	3932160
   614 0000057D E8 [00000000]                   	CALL	_memman_free_fdata
   615 00000582 31 C0                           	XOR	EAX,EAX
   616 00000584 EB E7                           	JMP	L140
   617                                          [SECTION .data]
   618 00000287                                 LC17:
   619 00000287 66 64 61 74 61 2D 3E 68 65 61   	DB	"fdata->head.name = %s[EOF]",0x0A,0x00
       00000291 64 2E 6E 61 6D 65 20 3D 20 25 
       0000029B 73 5B 45 4F 46 5D 0A 00 
   620 000002A3                                 LC18:
   621 000002A3 49 6E 20 66 75 6E 63 74 69 6F   	DB	"In function myfsave():Can't save because this file data is not opened.",0x0A,0x00
       000002AD 6E 20 6D 79 66 73 61 76 65 28 
       000002B7 29 3A 43 61 6E 27 74 20 73 61 
       000002C1 76 65 20 62 65 63 61 75 73 65 
       000002CB 20 74 68 69 73 20 66 69 6C 65 
       000002D5 20 64 61 74 61 20 69 73 20 6E 
       000002DF 6F 74 20 6F 70 65 6E 65 64 2E 
       000002E9 0A 00 
   622                                          [SECTION .text]
   623 00000586                                 	GLOBAL	_myfsave
   624 00000586                                 _myfsave:
   625 00000586 55                              	PUSH	EBP
   626 00000587 89 E5                           	MOV	EBP,ESP
   627 00000589 57                              	PUSH	EDI
   628 0000058A 56                              	PUSH	ESI
   629 0000058B 53                              	PUSH	EBX
   630 0000058C 81 EC 000000D0                  	SUB	ESP,208
   631 00000592 E8 [00000000]                   	CALL	_task_now
   632 00000597 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
   633 0000059A 8B 70 10                        	MOV	ESI,DWORD [16+EAX]
   634 0000059D 6A 32                           	PUSH	50
   635 0000059F FF 76 14                        	PUSH	DWORD [20+ESI]
   636 000005A2 8D 5E 01                        	LEA	EBX,DWORD [1+ESI]
   637 000005A5 53                              	PUSH	EBX
   638 000005A6 E8 FFFFFBB8                     	CALL	_myfinfo_search
   639 000005AB 53                              	PUSH	EBX
   640 000005AC 68 [00000287]                   	PUSH	LC17
   641 000005B1 8D 9D FFFFFF24                  	LEA	EBX,DWORD [-220+EBP]
   642 000005B7 53                              	PUSH	EBX
   643 000005B8 89 C7                           	MOV	EDI,EAX
   644 000005BA E8 [00000000]                   	CALL	_sprintf
   645 000005BF 53                              	PUSH	EBX
   646 000005C0 E8 [00000000]                   	CALL	_debug_print
   647 000005C5 83 C8 FF                        	OR	EAX,-1
   648 000005C8 83 C4 1C                        	ADD	ESP,28
   649 000005CB 85 FF                           	TEST	EDI,EDI
   650 000005CD 74 1D                           	JE	L143
   651 000005CF 8A 06                           	MOV	AL,BYTE [ESI]
   652 000005D1 83 E0 08                        	AND	EAX,8
   653 000005D4 84 C0                           	TEST	AL,AL
   654 000005D6 75 1C                           	JNE	L145
   655 000005D8 68 [000002A3]                   	PUSH	LC18
   656 000005DD 53                              	PUSH	EBX
   657 000005DE E8 [00000000]                   	CALL	_sprintf
   658 000005E3 53                              	PUSH	EBX
   659 000005E4 E8 [00000000]                   	CALL	_debug_print
   660 000005E9 83 C8 FF                        	OR	EAX,-1
   661 000005EC                                 L143:
   662 000005EC 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   663 000005EF 5B                              	POP	EBX
   664 000005F0 5E                              	POP	ESI
   665 000005F1 5F                              	POP	EDI
   666 000005F2 5D                              	POP	EBP
   667 000005F3 C3                              	RET
   668 000005F4                                 L145:
   669 000005F4 FF 75 08                        	PUSH	DWORD [8+EBP]
   670 000005F7 53                              	PUSH	EBX
   671 000005F8 E8 00000257                     	CALL	_myfread
   672 000005FD 53                              	PUSH	EBX
   673 000005FE 56                              	PUSH	ESI
   674 000005FF E8 000000B3                     	CALL	_myfwrite
   675 00000604 56                              	PUSH	ESI
   676 00000605 E8 0000037F                     	CALL	_get_size_myfdata
   677 0000060A 89 47 1C                        	MOV	DWORD [28+EDI],EAX
   678 0000060D 31 C0                           	XOR	EAX,EAX
   679 0000060F EB DB                           	JMP	L143
   680 00000611                                 	GLOBAL	_get_newfdata
   681 00000611                                 _get_newfdata:
   682 00000611 55                              	PUSH	EBP
   683 00000612 89 E5                           	MOV	EBP,ESP
   684 00000614 56                              	PUSH	ESI
   685 00000615 53                              	PUSH	EBX
   686 00000616 31 DB                           	XOR	EBX,EBX
   687 00000618 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
   688 0000061B 80 3E FF                        	CMP	BYTE [ESI],-1
   689 0000061E 74 0D                           	JE	L149
   690 00000620 8D 86 FFB00000                  	LEA	EAX,DWORD [-5242880+ESI]
   691 00000626 3D 000FFFFF                     	CMP	EAX,1048575
   692 0000062B 77 4E                           	JA	L151
   693 0000062D                                 L149:
   694 0000062D A0 00500000                     	MOV	AL,BYTE [5242880]
   695 00000632 BA 00500000                     	MOV	EDX,5242880
   696 00000637 83 E0 01                        	AND	EAX,1
   697 0000063A 84 C0                           	TEST	AL,AL
   698 0000063C 74 0F                           	JE	L174
   699 0000063E                                 L155:
   700 0000063E 81 C2 00000400                  	ADD	EDX,1024
   701 00000644 8A 02                           	MOV	AL,BYTE [EDX]
   702 00000646 83 E0 01                        	AND	EAX,1
   703 00000649 84 C0                           	TEST	AL,AL
   704 0000064B 75 F1                           	JNE	L155
   705 0000064D                                 L174:
   706 0000064D 89 D1                           	MOV	ECX,EDX
   707 0000064F 31 DB                           	XOR	EBX,EBX
   708 00000651                                 L160:
   709 00000651 C6 44 13 1C 00                  	MOV	BYTE [28+EBX+EDX*1],0
   710 00000656 43                              	INC	EBX
   711 00000657 81 FB 000003E3                  	CMP	EBX,995
   712 0000065D 76 F2                           	JBE	L160
   713 0000065F C6 02 01                        	MOV	BYTE [EDX],1
   714 00000662                                 L181:
   715 00000662 8B 46 14                        	MOV	EAX,DWORD [20+ESI]
   716 00000665 89 52 10                        	MOV	DWORD [16+EDX],EDX
   717 00000668 89 42 14                        	MOV	DWORD [20+EDX],EAX
   718 0000066B 89 C8                           	MOV	EAX,ECX
   719 0000066D C7 42 18 00000000               	MOV	DWORD [24+EDX],0
   720 00000674 8D 65 F8                        	LEA	ESP,DWORD [-8+EBP]
   721 00000677 5B                              	POP	EBX
   722 00000678 5E                              	POP	ESI
   723 00000679 5D                              	POP	EBP
   724 0000067A C3                              	RET
   725 0000067B                                 L151:
   726 0000067B 68 00000400                     	PUSH	1024
   727 00000680 68 003C0000                     	PUSH	3932160
   728 00000685 E8 [00000000]                   	CALL	_memman_alloc
   729 0000068A 59                              	POP	ECX
   730 0000068B 89 C2                           	MOV	EDX,EAX
   731 0000068D 59                              	POP	ECX
   732 0000068E                                 L167:
   733 0000068E 43                              	INC	EBX
   734 0000068F C7 00 00000000                  	MOV	DWORD [EAX],0
   735 00000695 83 C0 04                        	ADD	EAX,4
   736 00000698 81 FB 00000400                  	CMP	EBX,1024
   737 0000069E 72 EE                           	JB	L167
   738 000006A0 89 D1                           	MOV	ECX,EDX
   739 000006A2 31 DB                           	XOR	EBX,EBX
   740 000006A4                                 L172:
   741 000006A4 C6 44 13 1C 00                  	MOV	BYTE [28+EBX+EDX*1],0
   742 000006A9 43                              	INC	EBX
   743 000006AA 81 FB 000003E3                  	CMP	EBX,995
   744 000006B0 76 F2                           	JBE	L172
   745 000006B2 C6 02 0D                        	MOV	BYTE [EDX],13
   746 000006B5 EB AB                           	JMP	L181
   747                                          [SECTION .data]
   748 000002EB                                 LC19:
   749 000002EB 6D 79 66 77 72 69 74 65 28 29   	DB	"myfwrite() has been called.",0x0A,0x00
       000002F5 20 68 61 73 20 62 65 65 6E 20 
       000002FF 63 61 6C 6C 65 64 2E 0A 00 
   750 00000308                                 LC25:
   751 00000308 49 6E 20 63 75 72 72 65 6E 74   	DB	"In current block, %d/%d is used.",0x0A,0x00
       00000312 20 62 6C 6F 63 6B 2C 20 25 64 
       0000031C 2F 25 64 20 69 73 20 75 73 65 
       00000326 64 2E 0A 00 
   752 0000032A                                 LC21:
   753 0000032A 2A 2A 2A 49 4E 20 42 4C 4F 43   	DB	"***IN BLOCK DELETE FUNCTION***",0x0A,0x00
       00000334 4B 20 44 45 4C 45 54 45 20 46 
       0000033E 55 4E 43 54 49 4F 4E 2A 2A 2A 
       00000348 0A 00 
   754 0000034A                                 LC22:
   755 0000034A 5B 46 72 65 65 20 66 64 61 74   	DB	"[Free fdata mode]",0x0A,0x00
       00000354 61 20 6D 6F 64 65 5D 0A 00 
   756 0000035D                                 LC24:
   757 0000035D 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A   	DB	"******************************",0x0A,0x00
       00000367 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 
       00000371 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 
       0000037B 0A 00 
   758 0000037D                                 LC23:
   759 0000037D 5B 49 6E 69 74 20 66 64 61 74   	DB	"[Init fdata mode]",0x0A,0x00
       00000387 61 20 6D 6F 64 65 5D 0A 00 
   760 00000390                                 LC20:
   761 00000390 62 6C 6F 63 6B 20 6D 6F 76 65   	DB	"block moved: 0x%08x -> 0x%08x",0x0A,0x00
       0000039A 64 3A 20 30 78 25 30 38 78 20 
       000003A4 2D 3E 20 30 78 25 30 38 78 0A 
       000003AE 00 
   762                                          [SECTION .text]
   763 000006B7                                 	GLOBAL	_myfwrite
   764 000006B7                                 _myfwrite:
   765 000006B7 55                              	PUSH	EBP
   766 000006B8 89 E5                           	MOV	EBP,ESP
   767 000006BA 57                              	PUSH	EDI
   768 000006BB 56                              	PUSH	ESI
   769 000006BC 31 FF                           	XOR	EDI,EDI
   770 000006BE 53                              	PUSH	EBX
   771 000006BF 8D 9D FFFFFB84                  	LEA	EBX,DWORD [-1148+EBP]
   772 000006C5 81 EC 00000480                  	SUB	ESP,1152
   773 000006CB 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
   774 000006CE 56                              	PUSH	ESI
   775 000006CF C7 85 FFFFFB80 00000000         	MOV	DWORD [-1152+EBP],0
   776 000006D9 C7 85 FFFFFB7C 00000001         	MOV	DWORD [-1156+EBP],1
   777 000006E3 E8 00000332                     	CALL	_get_blocknum_myfdata
   778 000006E8 68 [000002EB]                   	PUSH	LC19
   779 000006ED 53                              	PUSH	EBX
   780 000006EE 89 85 FFFFFB78                  	MOV	DWORD [-1160+EBP],EAX
   781 000006F4 E8 [00000000]                   	CALL	_sprintf
   782 000006F9 53                              	PUSH	EBX
   783 000006FA E8 [00000000]                   	CALL	_debug_print
   784 000006FF 8B 45 0C                        	MOV	EAX,DWORD [12+EBP]
   785 00000702 83 C4 10                        	ADD	ESP,16
   786 00000705 80 38 00                        	CMP	BYTE [EAX],0
   787 00000708 74 37                           	JE	L197
   788 0000070A C7 85 FFFFFB74 000003E3         	MOV	DWORD [-1164+EBP],995
   789 00000714                                 L188:
   790 00000714 8B 55 0C                        	MOV	EDX,DWORD [12+EBP]
   791 00000717 8A 04 17                        	MOV	AL,BYTE [EDI+EDX*1]
   792 0000071A 47                              	INC	EDI
   793 0000071B 8B 95 FFFFFB80                  	MOV	EDX,DWORD [-1152+EBP]
   794 00000721 88 44 32 1C                     	MOV	BYTE [28+EDX+ESI*1],AL
   795 00000725 42                              	INC	EDX
   796 00000726 89 95 FFFFFB80                  	MOV	DWORD [-1152+EBP],EDX
   797 0000072C 3B BD FFFFFB74                  	CMP	EDI,DWORD [-1164+EBP]
   798 00000732 0F 84 000000C0                  	JE	L199
   799 00000738                                 L183:
   800 00000738 8B 55 0C                        	MOV	EDX,DWORD [12+EBP]
   801 0000073B 80 3C 17 00                     	CMP	BYTE [EDI+EDX*1],0
   802 0000073F 75 D3                           	JNE	L188
   803 00000741                                 L197:
   804 00000741 8B 55 0C                        	MOV	EDX,DWORD [12+EBP]
   805 00000744 8A 04 17                        	MOV	AL,BYTE [EDI+EDX*1]
   806 00000747 8B 95 FFFFFB80                  	MOV	EDX,DWORD [-1152+EBP]
   807 0000074D 88 44 32 1C                     	MOV	BYTE [28+EDX+ESI*1],AL
   808 00000751 8B 85 FFFFFB78                  	MOV	EAX,DWORD [-1160+EBP]
   809 00000757 39 85 FFFFFB7C                  	CMP	DWORD [-1156+EBP],EAX
   810 0000075D 72 30                           	JB	L200
   811 0000075F                                 L189:
   812 0000075F 56                              	PUSH	ESI
   813 00000760 8D 9D FFFFFB84                  	LEA	EBX,DWORD [-1148+EBP]
   814 00000766 E8 0000021E                     	CALL	_get_size_myfdata
   815 0000076B 68 000003E4                     	PUSH	996
   816 00000770 50                              	PUSH	EAX
   817 00000771 68 [00000308]                   	PUSH	LC25
   818 00000776 53                              	PUSH	EBX
   819 00000777 E8 [00000000]                   	CALL	_sprintf
   820 0000077C 53                              	PUSH	EBX
   821 0000077D E8 [00000000]                   	CALL	_debug_print
   822 00000782 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   823 00000785 5B                              	POP	EBX
   824 00000786 B8 00000001                     	MOV	EAX,1
   825 0000078B 5E                              	POP	ESI
   826 0000078C 5F                              	POP	EDI
   827 0000078D 5D                              	POP	EBP
   828 0000078E C3                              	RET
   829 0000078F                                 L200:
   830 0000078F 68 [0000032A]                   	PUSH	LC21
   831 00000794 E8 [00000000]                   	CALL	_debug_print
   832 00000799 8A 16                           	MOV	DL,BYTE [ESI]
   833 0000079B 88 D0                           	MOV	AL,DL
   834 0000079D 8B 5E 18                        	MOV	EBX,DWORD [24+ESI]
   835 000007A0 83 E0 FD                        	AND	EAX,-3
   836 000007A3 83 E2 04                        	AND	EDX,4
   837 000007A6 88 06                           	MOV	BYTE [ESI],AL
   838 000007A8 84 D2                           	TEST	DL,DL
   839 000007AA C7 46 18 00000000               	MOV	DWORD [24+ESI],0
   840 000007B1 58                              	POP	EAX
   841 000007B2 74 25                           	JE	L190
   842 000007B4 68 [0000034A]                   	PUSH	LC22
   843 000007B9 E8 [00000000]                   	CALL	_debug_print
   844 000007BE 53                              	PUSH	EBX
   845 000007BF 68 003C0000                     	PUSH	3932160
   846 000007C4 E8 [00000000]                   	CALL	_memman_free_fdata
   847 000007C9 83 C4 0C                        	ADD	ESP,12
   848 000007CC                                 L191:
   849 000007CC 68 [0000035D]                   	PUSH	LC24
   850 000007D1 E8 [00000000]                   	CALL	_debug_print
   851 000007D6 5B                              	POP	EBX
   852 000007D7 EB 86                           	JMP	L189
   853 000007D9                                 L190:
   854 000007D9 68 [0000037D]                   	PUSH	LC23
   855 000007DE E8 [00000000]                   	CALL	_debug_print
   856 000007E3 5F                              	POP	EDI
   857 000007E4 83 7B 18 00                     	CMP	DWORD [24+EBX],0
   858 000007E8 74 E2                           	JE	L191
   859 000007EA                                 L195:
   860 000007EA C6 03 00                        	MOV	BYTE [EBX],0
   861 000007ED 8B 5B 18                        	MOV	EBX,DWORD [24+EBX]
   862 000007F0 83 7B 18 00                     	CMP	DWORD [24+EBX],0
   863 000007F4 75 F4                           	JNE	L195
   864 000007F6 EB D4                           	JMP	L191
   865 000007F8                                 L199:
   866 000007F8 C6 44 32 1C 00                  	MOV	BYTE [28+EDX+ESI*1],0
   867 000007FD 89 F3                           	MOV	EBX,ESI
   868 000007FF 83 7E 18 00                     	CMP	DWORD [24+ESI],0
   869 00000803 74 40                           	JE	L201
   870 00000805                                 L187:
   871 00000805 8B 76 18                        	MOV	ESI,DWORD [24+ESI]
   872 00000808 8D 87 000003E3                  	LEA	EAX,DWORD [995+EDI]
   873 0000080E 56                              	PUSH	ESI
   874 0000080F 89 85 FFFFFB74                  	MOV	DWORD [-1164+EBP],EAX
   875 00000815 53                              	PUSH	EBX
   876 00000816 FF 85 FFFFFB7C                  	INC	DWORD [-1156+EBP]
   877 0000081C 68 [00000390]                   	PUSH	LC20
   878 00000821 8D 9D FFFFFB84                  	LEA	EBX,DWORD [-1148+EBP]
   879 00000827 53                              	PUSH	EBX
   880 00000828 E8 [00000000]                   	CALL	_sprintf
   881 0000082D 53                              	PUSH	EBX
   882 0000082E E8 [00000000]                   	CALL	_debug_print
   883 00000833 83 C4 14                        	ADD	ESP,20
   884 00000836 C7 85 FFFFFB80 00000000         	MOV	DWORD [-1152+EBP],0
   885 00000840 E9 FFFFFEF3                     	JMP	L183
   886 00000845                                 L201:
   887 00000845 56                              	PUSH	ESI
   888 00000846 E8 FFFFFDC6                     	CALL	_get_newfdata
   889 0000084B 80 0E 02                        	OR	BYTE [ESI],2
   890 0000084E 89 46 18                        	MOV	DWORD [24+ESI],EAX
   891 00000851 58                              	POP	EAX
   892 00000852 EB B1                           	JMP	L187
   893                                          [SECTION .data]
   894 000003AF                                 LC26:
   895 000003AF 6D 79 66 72 65 61 64 28 29 20   	DB	"myfread() has been called.",0x0A,0x00
       000003B9 68 61 73 20 62 65 65 6E 20 63 
       000003C3 61 6C 6C 65 64 2E 0A 00 
   896 000003CB                                 LC27:
   897 000003CB 66 64 61 74 61 2D 3E 62 6F 64   	DB	"fdata->body[%d] = %s[EOF]",0x0A,0x00
       000003D5 79 5B 25 64 5D 20 3D 20 25 73 
       000003DF 5B 45 4F 46 5D 0A 00 
   898 000003E6                                 LC28:
   899 000003E6 72 65 61 64 20 64 61 74 61 20   	DB	"read data = %s[EOF]",0x0A,0x00
       000003F0 3D 20 25 73 5B 45 4F 46 5D 0A 
       000003FA 00 
   900                                          [SECTION .text]
   901 00000854                                 	GLOBAL	_myfread
   902 00000854                                 _myfread:
   903 00000854 55                              	PUSH	EBP
   904 00000855 89 E5                           	MOV	EBP,ESP
   905 00000857 57                              	PUSH	EDI
   906 00000858 56                              	PUSH	ESI
   907 00000859 53                              	PUSH	EBX
   908 0000085A 8D 9D FFFFFB84                  	LEA	EBX,DWORD [-1148+EBP]
   909 00000860 81 EC 00000478                  	SUB	ESP,1144
   910 00000866 8B 7D 0C                        	MOV	EDI,DWORD [12+EBP]
   911 00000869 68 [000003AF]                   	PUSH	LC26
   912 0000086E 53                              	PUSH	EBX
   913 0000086F C7 85 FFFFFB7C 00000000         	MOV	DWORD [-1156+EBP],0
   914 00000879 E8 [00000000]                   	CALL	_sprintf
   915 0000087E 53                              	PUSH	EBX
   916 0000087F E8 [00000000]                   	CALL	_debug_print
   917 00000884 68 [000000F8]                   	PUSH	LC7
   918 00000889 FF 75 08                        	PUSH	DWORD [8+EBP]
   919 0000088C E8 [00000000]                   	CALL	_sprintf
   920 00000891 83 C4 14                        	ADD	ESP,20
   921 00000894                                 L203:
   922 00000894 8D 5F 1C                        	LEA	EBX,DWORD [28+EDI]
   923 00000897 8D B5 FFFFFB84                  	LEA	ESI,DWORD [-1148+EBP]
   924 0000089D 53                              	PUSH	EBX
   925 0000089E 89 BD FFFFFB80                  	MOV	DWORD [-1152+EBP],EDI
   926 000008A4 FF B5 FFFFFB7C                  	PUSH	DWORD [-1156+EBP]
   927 000008AA 68 [000003CB]                   	PUSH	LC27
   928 000008AF 56                              	PUSH	ESI
   929 000008B0 E8 [00000000]                   	CALL	_sprintf
   930 000008B5 56                              	PUSH	ESI
   931 000008B6 E8 [00000000]                   	CALL	_debug_print
   932 000008BB 53                              	PUSH	EBX
   933 000008BC FF 75 08                        	PUSH	DWORD [8+EBP]
   934 000008BF E8 [00000000]                   	CALL	_strcat
   935 000008C4 8B 85 FFFFFB80                  	MOV	EAX,DWORD [-1152+EBP]
   936 000008CA FF 85 FFFFFB7C                  	INC	DWORD [-1156+EBP]
   937 000008D0 83 C4 1C                        	ADD	ESP,28
   938 000008D3 8B 7F 18                        	MOV	EDI,DWORD [24+EDI]
   939 000008D6 83 78 18 00                     	CMP	DWORD [24+EAX],0
   940 000008DA 75 B8                           	JNE	L203
   941 000008DC FF 75 08                        	PUSH	DWORD [8+EBP]
   942 000008DF 68 [000003E6]                   	PUSH	LC28
   943 000008E4 56                              	PUSH	ESI
   944 000008E5 E8 [00000000]                   	CALL	_sprintf
   945 000008EA 56                              	PUSH	ESI
   946 000008EB E8 [00000000]                   	CALL	_debug_print
   947 000008F0 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   948 000008F3 5B                              	POP	EBX
   949 000008F4 B8 00000001                     	MOV	EAX,1
   950 000008F9 5E                              	POP	ESI
   951 000008FA 5F                              	POP	EDI
   952 000008FB 5D                              	POP	EBP
   953 000008FC C3                              	RET
   954                                          [SECTION .data]
   955 000003FB                                 LC29:
   956 000003FB 6D 79 66 63 6F 70 79 28 29 20   	DB	"myfcopy() has been called.",0x0A,0x00
       00000405 68 61 73 20 62 65 65 6E 20 63 
       0000040F 61 6C 6C 65 64 2E 0A 00 
   957 00000417                                 LC30:
   958 00000417 66 64 61 74 61 2D 3E 62 6F 64   	DB	"fdata->body[%d] was copied.",0x0A,0x00
       00000421 79 5B 25 64 5D 20 77 61 73 20 
       0000042B 63 6F 70 69 65 64 2E 0A 00 
   959                                          [SECTION .text]
   960 000008FD                                 	GLOBAL	_myfcopy
   961 000008FD                                 _myfcopy:
   962 000008FD 55                              	PUSH	EBP
   963 000008FE 89 E5                           	MOV	EBP,ESP
   964 00000900 57                              	PUSH	EDI
   965 00000901 56                              	PUSH	ESI
   966 00000902 53                              	PUSH	EBX
   967 00000903 8D 5D B4                        	LEA	EBX,DWORD [-76+EBP]
   968 00000906 83 EC 48                        	SUB	ESP,72
   969 00000909 C7 45 B0 00000000               	MOV	DWORD [-80+EBP],0
   970 00000910 68 [000003FB]                   	PUSH	LC29
   971 00000915 53                              	PUSH	EBX
   972 00000916 E8 [00000000]                   	CALL	_sprintf
   973 0000091B 53                              	PUSH	EBX
   974 0000091C E8 [00000000]                   	CALL	_debug_print
   975 00000921 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
   976 00000924 05 00000400                     	ADD	EAX,1024
   977 00000929 83 C4 0C                        	ADD	ESP,12
   978 0000092C 89 45 AC                        	MOV	DWORD [-84+EBP],EAX
   979 0000092F                                 L208:
   980 0000092F FC                              	CLD
   981 00000930 8B 7D 08                        	MOV	EDI,DWORD [8+EBP]
   982 00000933 8B 75 0C                        	MOV	ESI,DWORD [12+EBP]
   983 00000936 B9 00000100                     	MOV	ECX,256
   984 0000093B 8D 5D B4                        	LEA	EBX,DWORD [-76+EBP]
   985 0000093E F3                              	REP
   986 0000093F A5                              	MOVSD
   987 00000940 FF 75 B0                        	PUSH	DWORD [-80+EBP]
   988 00000943 68 [00000417]                   	PUSH	LC30
   989 00000948 53                              	PUSH	EBX
   990 00000949 E8 [00000000]                   	CALL	_sprintf
   991 0000094E 53                              	PUSH	EBX
   992 0000094F E8 [00000000]                   	CALL	_debug_print
   993 00000954 8B 55 0C                        	MOV	EDX,DWORD [12+EBP]
   994 00000957 FF 45 B0                        	INC	DWORD [-80+EBP]
   995 0000095A 83 C4 10                        	ADD	ESP,16
   996 0000095D 8B 72 18                        	MOV	ESI,DWORD [24+EDX]
   997 00000960 85 F6                           	TEST	ESI,ESI
   998 00000962 74 18                           	JE	L209
   999 00000964 8B 7D AC                        	MOV	EDI,DWORD [-84+EBP]
  1000 00000967 89 75 0C                        	MOV	DWORD [12+EBP],ESI
  1001 0000096A 81 45 AC 00000400               	ADD	DWORD [-84+EBP],1024
  1002 00000971 89 BF FFFFFC18                  	MOV	DWORD [-1000+EDI],EDI
  1003 00000977 89 7D 08                        	MOV	DWORD [8+EBP],EDI
  1004 0000097A EB B3                           	JMP	L208
  1005 0000097C                                 L209:
  1006 0000097C 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
  1007 0000097F B8 00000001                     	MOV	EAX,1
  1008 00000984 5B                              	POP	EBX
  1009 00000985 5E                              	POP	ESI
  1010 00000986 5F                              	POP	EDI
  1011 00000987 5D                              	POP	EBP
  1012 00000988 C3                              	RET
  1013                                          [SECTION .data]
  1014 00000434                                 LC31:
  1015 00000434 66 64 61 74 61 2D 3E 62 6F 64   	DB	"fdata->body = %s",0x0A,0x00
       0000043E 79 20 3D 20 25 73 0A 00 
  1016 00000446                                 LC32:
  1017 00000446 70 20 3D 20 25 64 0A 00         	DB	"p = %d",0x0A,0x00
  1018                                          [SECTION .text]
  1019 00000989                                 	GLOBAL	_get_size_myfdata
  1020 00000989                                 _get_size_myfdata:
  1021 00000989 55                              	PUSH	EBP
  1022 0000098A 89 E5                           	MOV	EBP,ESP
  1023 0000098C 57                              	PUSH	EDI
  1024 0000098D 56                              	PUSH	ESI
  1025 0000098E 31 FF                           	XOR	EDI,EDI
  1026 00000990 53                              	PUSH	EBX
  1027 00000991 81 EC 00000470                  	SUB	ESP,1136
  1028 00000997 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
  1029 0000099A 8A 02                           	MOV	AL,BYTE [EDX]
  1030 0000099C 83 E0 02                        	AND	EAX,2
  1031 0000099F 84 C0                           	TEST	AL,AL
  1032 000009A1 74 16                           	JE	L215
  1033 000009A3                                 L219:
  1034 000009A3 80 BA 000003FE 00               	CMP	BYTE [1022+EDX],0
  1035 000009AA 74 0D                           	JE	L215
  1036 000009AC 8B 52 18                        	MOV	EDX,DWORD [24+EDX]
  1037 000009AF 47                              	INC	EDI
  1038 000009B0 8A 02                           	MOV	AL,BYTE [EDX]
  1039 000009B2 83 E0 02                        	AND	EAX,2
  1040 000009B5 84 C0                           	TEST	AL,AL
  1041 000009B7 75 EA                           	JNE	L219
  1042 000009B9                                 L215:
  1043 000009B9 8D 5A 1C                        	LEA	EBX,DWORD [28+EDX]
  1044 000009BC 53                              	PUSH	EBX
  1045 000009BD 69 FF 000003E4                  	IMUL	EDI,EDI,996
  1046 000009C3 E8 0000003C                     	CALL	_get_size_str
  1047 000009C8 53                              	PUSH	EBX
  1048 000009C9 68 [00000434]                   	PUSH	LC31
  1049 000009CE 8D 9D FFFFFB84                  	LEA	EBX,DWORD [-1148+EBP]
  1050 000009D4 53                              	PUSH	EBX
  1051 000009D5 89 C6                           	MOV	ESI,EAX
  1052 000009D7 E8 [00000000]                   	CALL	_sprintf
  1053 000009DC 53                              	PUSH	EBX
  1054 000009DD E8 [00000000]                   	CALL	_debug_print
  1055 000009E2 56                              	PUSH	ESI
  1056 000009E3 68 [00000446]                   	PUSH	LC32
  1057 000009E8 8D 34 3E                        	LEA	ESI,DWORD [ESI+EDI*1]
  1058 000009EB 53                              	PUSH	EBX
  1059 000009EC E8 [00000000]                   	CALL	_sprintf
  1060 000009F1 83 C4 20                        	ADD	ESP,32
  1061 000009F4 53                              	PUSH	EBX
  1062 000009F5 E8 [00000000]                   	CALL	_debug_print
  1063 000009FA 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
  1064 000009FD 5B                              	POP	EBX
  1065 000009FE 89 F0                           	MOV	EAX,ESI
  1066 00000A00 5E                              	POP	ESI
  1067 00000A01 5F                              	POP	EDI
  1068 00000A02 5D                              	POP	EBP
  1069 00000A03 C3                              	RET
  1070 00000A04                                 	GLOBAL	_get_size_str
  1071 00000A04                                 _get_size_str:
  1072 00000A04 55                              	PUSH	EBP
  1073 00000A05 31 C0                           	XOR	EAX,EAX
  1074 00000A07 89 E5                           	MOV	EBP,ESP
  1075 00000A09 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
  1076 00000A0C 80 3A 00                        	CMP	BYTE [EDX],0
  1077 00000A0F 74 07                           	JE	L227
  1078 00000A11                                 L225:
  1079 00000A11 40                              	INC	EAX
  1080 00000A12 80 3C 10 00                     	CMP	BYTE [EAX+EDX*1],0
  1081 00000A16 75 F9                           	JNE	L225
  1082 00000A18                                 L227:
  1083 00000A18 5D                              	POP	EBP
  1084 00000A19 C3                              	RET
  1085                                          [SECTION .data]
  1086 0000044E                                 LC33:
  1087 0000044E 75 73 65 64 20 62 6C 6F 63 6B   	DB	"used block number = %d",0x0A,0x00
       00000458 20 6E 75 6D 62 65 72 20 3D 20 
       00000462 25 64 0A 00 
  1088                                          [SECTION .text]
  1089 00000A1A                                 	GLOBAL	_get_blocknum_myfdata
  1090 00000A1A                                 _get_blocknum_myfdata:
  1091 00000A1A 55                              	PUSH	EBP
  1092 00000A1B 89 E5                           	MOV	EBP,ESP
  1093 00000A1D 56                              	PUSH	ESI
  1094 00000A1E 53                              	PUSH	EBX
  1095 00000A1F 83 EC 40                        	SUB	ESP,64
  1096 00000A22 8D 75 B8                        	LEA	ESI,DWORD [-72+EBP]
  1097 00000A25 FF 75 08                        	PUSH	DWORD [8+EBP]
  1098 00000A28 E8 FFFFFF5C                     	CALL	_get_size_myfdata
  1099 00000A2D BA 000003E4                     	MOV	EDX,996
  1100 00000A32 89 D1                           	MOV	ECX,EDX
  1101 00000A34 31 D2                           	XOR	EDX,EDX
  1102 00000A36 F7 F1                           	DIV	ECX
  1103 00000A38 89 C3                           	MOV	EBX,EAX
  1104 00000A3A 43                              	INC	EBX
  1105 00000A3B 53                              	PUSH	EBX
  1106 00000A3C 68 [0000044E]                   	PUSH	LC33
  1107 00000A41 56                              	PUSH	ESI
  1108 00000A42 E8 [00000000]                   	CALL	_sprintf
  1109 00000A47 56                              	PUSH	ESI
  1110 00000A48 E8 [00000000]                   	CALL	_debug_print
  1111 00000A4D 8D 65 F8                        	LEA	ESP,DWORD [-8+EBP]
  1112 00000A50 89 D8                           	MOV	EAX,EBX
  1113 00000A52 5B                              	POP	EBX
  1114 00000A53 5E                              	POP	ESI
  1115 00000A54 5D                              	POP	EBP
  1116 00000A55 C3                              	RET
  1117                                          [SECTION .data]
  1118 00000466                                 LC35:
  1119 00000466 68 65 61 64 2E 73 74 61 74 20   	DB	"head.stat is changed: 0x%02x -> 0x%02x",0x0A,0x00
       00000470 69 73 20 63 68 61 6E 67 65 64 
       0000047A 3A 20 30 78 25 30 32 78 20 2D 
       00000484 3E 20 30 78 25 30 32 78 0A 00 
  1120 0000048E                                 LC36:
  1121 0000048E 73 74 61 74 75 73 20 62 69 74   	DB	"status bit was added correctly.",0x0A,0x00
       00000498 20 77 61 73 20 61 64 64 65 64 
       000004A2 20 63 6F 72 72 65 63 74 6C 79 
       000004AC 2E 0A 00 
  1122 000004AF                                 LC34:
  1123 000004AF 2A 2A 2A 61 64 64 69 6E 67 20   	DB	"***adding status bit is already valid.***",0x0A,0x00
       000004B9 73 74 61 74 75 73 20 62 69 74 
       000004C3 20 69 73 20 61 6C 72 65 61 64 
       000004CD 79 20 76 61 6C 69 64 2E 2A 2A 
       000004D7 2A 0A 00 
  1124                                          [SECTION .text]
  1125 00000A56                                 	GLOBAL	_add_status_myfdata
  1126 00000A56                                 _add_status_myfdata:
  1127 00000A56 55                              	PUSH	EBP
  1128 00000A57 89 E5                           	MOV	EBP,ESP
  1129 00000A59 57                              	PUSH	EDI
  1130 00000A5A 56                              	PUSH	ESI
  1131 00000A5B 53                              	PUSH	EBX
  1132 00000A5C 83 EC 74                        	SUB	ESP,116
  1133 00000A5F 0F B6 7D 0C                     	MOVZX	EDI,BYTE [12+EBP]
  1134 00000A63 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
  1135 00000A66                                 L230:
  1136 00000A66 89 75 80                        	MOV	DWORD [-128+EBP],ESI
  1137 00000A69 89 F9                           	MOV	ECX,EDI
  1138 00000A6B 8A 16                           	MOV	DL,BYTE [ESI]
  1139 00000A6D 88 D0                           	MOV	AL,DL
  1140 00000A6F 21 F8                           	AND	EAX,EDI
  1141 00000A71 38 C8                           	CMP	AL,CL
  1142 00000A73 74 48                           	JE	L235
  1143 00000A75 88 D0                           	MOV	AL,DL
  1144 00000A77 8D 5D 84                        	LEA	EBX,DWORD [-124+EBP]
  1145 00000A7A 09 F8                           	OR	EAX,EDI
  1146 00000A7C 88 06                           	MOV	BYTE [ESI],AL
  1147 00000A7E 0F B6 C0                        	MOVZX	EAX,AL
  1148 00000A81 50                              	PUSH	EAX
  1149 00000A82 0F B6 C2                        	MOVZX	EAX,DL
  1150 00000A85 50                              	PUSH	EAX
  1151 00000A86 68 [00000466]                   	PUSH	LC35
  1152 00000A8B 53                              	PUSH	EBX
  1153 00000A8C E8 [00000000]                   	CALL	_sprintf
  1154 00000A91 53                              	PUSH	EBX
  1155 00000A92 E8 [00000000]                   	CALL	_debug_print
  1156 00000A97 8B 45 80                        	MOV	EAX,DWORD [-128+EBP]
  1157 00000A9A 83 C4 14                        	ADD	ESP,20
  1158 00000A9D 8B 76 18                        	MOV	ESI,DWORD [24+ESI]
  1159 00000AA0 83 78 18 00                     	CMP	DWORD [24+EAX],0
  1160 00000AA4 75 C0                           	JNE	L230
  1161 00000AA6 68 [0000048E]                   	PUSH	LC36
  1162 00000AAB E8 [00000000]                   	CALL	_debug_print
  1163 00000AB0 B8 00000001                     	MOV	EAX,1
  1164 00000AB5                                 L229:
  1165 00000AB5 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
  1166 00000AB8 5B                              	POP	EBX
  1167 00000AB9 5E                              	POP	ESI
  1168 00000ABA 5F                              	POP	EDI
  1169 00000ABB 5D                              	POP	EBP
  1170 00000ABC C3                              	RET
  1171 00000ABD                                 L235:
  1172 00000ABD 68 [000004AF]                   	PUSH	LC34
  1173 00000AC2 E8 [00000000]                   	CALL	_debug_print
  1174 00000AC7 31 C0                           	XOR	EAX,EAX
  1175 00000AC9 EB EA                           	JMP	L229
